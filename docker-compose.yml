version: '3.5'

services:
  api1: &api
    #image: jeanlucafp/rinhabackend2024java:5
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api1
    depends_on:
      - postgres
    expose:
      - "8080"
    environment:
      - SPRING_DATASOURCE_URL=r2dbc:postgresql://jeanfernandes:1234@postgres:5432/app
    networks:
      - rinha
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "130MB"

  api2:
    <<: *api
    hostname: api2

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - rinha
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

  postgres:
    image: postgres:latest
    #command: 'postgres -c config_file=/etc/postgresql/pg.config'
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=2096 -c synchronous_commit=0 -c full_page_writes=0 -c fsync=off -c check_function_bodies=false
    hostname: postgres
    environment:
      - POSTGRES_DB=app
      - POSTGRES_USER=jeanfernandes
      - POSTGRES_PASSWORD=1234
    ports:
      - "5432:5432"
    volumes:
      - ./dbconfig/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - rinha
    deploy:
      resources:
        limits:
          cpus: "0.10"
          memory: "260MB"

networks:
  rinha:
    driver: bridge